
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.UIManager UIManager;
	
	private global::Gtk.Action FileAction;
	
	private global::Gtk.Action openAction;
	
	private global::Gtk.Action quitAction;
	
	private global::Gtk.Action ViewAction;
	
	private global::Gtk.Action HelpAction;
	
	private global::Gtk.Action aboutAction;
	
	private global::Gtk.Action saveAction;
	
	private global::Gtk.ToggleAction iconsAction;
	
	private global::Gtk.Action exportAsAction;
	
	private global::Gtk.Action exportAsRRAction;
	
	private global::Gtk.Action plotExternalAction;
	
	private global::Gtk.Action checksumWindowAction;
	
	private global::Gtk.Action propertiesWindowAction;
	
	private global::Gtk.Action PlotAction;
	
	private global::Gtk.Action createSVGFileAction;
	
	private global::Gtk.Action visualisationAction;
	
	private global::Gtk.Action DataAction;
	
	private global::Gtk.Action exportTableAsCSVAction;
	
	private global::Gtk.Action zoomInAction;
	
	private global::Gtk.Action zoomOutAction;
	
	private global::Gtk.Action zoomNormalAction;
	
	private global::Gtk.Action EditAction;
	
	private global::Gtk.Action copyAction;
	
	private global::Gtk.ToggleAction navigationBarAction;
	
	private global::Gtk.Action selectAllAction;
	
	private global::Gtk.Action selectNoneAction;
	
	private global::Gtk.Action exportAsXDFAction;
	
	private global::Gtk.VBox vbox1;
	
	private global::Gtk.MenuBar menubar1;
	
	private global::Gtk.ScrolledWindow navScrolledWindow;
	
	private global::GtkWidgets.NavBarWidget navbarwidget;
	
	private global::Gtk.Notebook notebook1;
	
	private global::Gtk.VPaned vpaned2D;
	
	private global::Gtk.ScrolledWindow GtkScrolledWindowTV2D;
	
	private global::Gtk.TreeView treeview2D;
	
	private global::Gtk.HPaned hpaned2D;
	
	private global::Gtk.ScrolledWindow scrolledwindowTable2D;
	
	private global::Gtk.Label label1;
	
	private global::Gtk.VPaned vpaned3D;
	
	private global::Gtk.ScrolledWindow ScrolledWindowTV3D;
	
	private global::Gtk.TreeView treeview3D;
	
	private global::Gtk.ScrolledWindow scrolledwindowTable3D;
	
	private global::Gtk.Label label2;
	
	private global::Gtk.Statusbar statusbar1;
	
	private global::Gtk.ProgressBar progressbar1;

	protected virtual void Build ()
	{
		global::Stetic.Gui.Initialize (this);
		// Widget MainWindow
		this.UIManager = new global::Gtk.UIManager ();
		global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
		this.FileAction = new global::Gtk.Action ("FileAction", "_File", null, null);
		this.FileAction.ShortLabel = "_File";
		w1.Add (this.FileAction, null);
		this.openAction = new global::Gtk.Action ("openAction", "_Open", null, "gtk-open");
		this.openAction.ShortLabel = "_Open";
		w1.Add (this.openAction, null);
		this.quitAction = new global::Gtk.Action ("quitAction", "_Quit", null, "gtk-quit");
		this.quitAction.ShortLabel = "_Quit";
		w1.Add (this.quitAction, null);
		this.ViewAction = new global::Gtk.Action ("ViewAction", "_View", null, null);
		this.ViewAction.ShortLabel = "_View";
		w1.Add (this.ViewAction, null);
		this.HelpAction = new global::Gtk.Action ("HelpAction", "_Help", null, null);
		this.HelpAction.ShortLabel = "_Help";
		w1.Add (this.HelpAction, null);
		this.aboutAction = new global::Gtk.Action ("aboutAction", "_About", null, "gtk-about");
		this.aboutAction.ShortLabel = "_About";
		w1.Add (this.aboutAction, null);
		this.saveAction = new global::Gtk.Action ("saveAction", "_Save XML", null, "gtk-save");
		this.saveAction.Sensitive = false;
		this.saveAction.ShortLabel = "_Save XML";
		w1.Add (this.saveAction, null);
		this.iconsAction = new global::Gtk.ToggleAction ("iconsAction", "Icons", null, null);
		this.iconsAction.Sensitive = false;
		this.iconsAction.ShortLabel = "Icons";
		w1.Add (this.iconsAction, "<Control>i");
		this.exportAsAction = new global::Gtk.Action ("exportAsAction", "_Export As", null, null);
		this.exportAsAction.Sensitive = false;
		this.exportAsAction.ShortLabel = "_Export As";
		w1.Add (this.exportAsAction, null);
		this.exportAsRRAction = new global::Gtk.Action ("exportAsRRAction", "_RomRaider Def XML", null, "gtk-save-as");
		this.exportAsRRAction.Sensitive = false;
		this.exportAsRRAction.ShortLabel = "RomRaider Def XML";
		w1.Add (this.exportAsRRAction, null);
		this.plotExternalAction = new global::Gtk.Action ("plotExternalAction", "_Plot External (gnuplot)", null, null);
		this.plotExternalAction.Sensitive = false;
		this.plotExternalAction.ShortLabel = "_Plot";
		w1.Add (this.plotExternalAction, "<Control>p");
		this.checksumWindowAction = new global::Gtk.Action ("checksumWindowAction", "Checksum Window", null, null);
		this.checksumWindowAction.Sensitive = false;
		this.checksumWindowAction.ShortLabel = "Checksum Window";
		w1.Add (this.checksumWindowAction, null);
		this.propertiesWindowAction = new global::Gtk.Action ("propertiesWindowAction", "Properties Window", null, "gtk-properties");
		this.propertiesWindowAction.Sensitive = false;
		this.propertiesWindowAction.ShortLabel = "Properties Window";
		w1.Add (this.propertiesWindowAction, "<Alt><Mod2>Return");
		this.PlotAction = new global::Gtk.Action ("PlotAction", "_Plot", null, null);
		this.PlotAction.ShortLabel = "_Plot";
		w1.Add (this.PlotAction, null);
		this.createSVGFileAction = new global::Gtk.Action ("createSVGFileAction", "Create SVG File", null, null);
		this.createSVGFileAction.Sensitive = false;
		this.createSVGFileAction.ShortLabel = "Create SVG File";
		w1.Add (this.createSVGFileAction, null);
		this.visualisationAction = new global::Gtk.Action ("visualisationAction", "_Visualisation", null, "gtk-refresh");
		this.visualisationAction.Sensitive = false;
		this.visualisationAction.ShortLabel = "Visualization";
		w1.Add (this.visualisationAction, "<Control>space");
		this.DataAction = new global::Gtk.Action ("DataAction", "_Data", null, null);
		this.DataAction.ShortLabel = "_Data";
		w1.Add (this.DataAction, null);
		this.exportTableAsCSVAction = new global::Gtk.Action ("exportTableAsCSVAction", "Export Table as CSV", null, null);
		this.exportTableAsCSVAction.Sensitive = false;
		this.exportTableAsCSVAction.ShortLabel = "Export Table as CSV";
		w1.Add (this.exportTableAsCSVAction, null);
		this.zoomInAction = new global::Gtk.Action ("zoomInAction", "Increase Icon Size", null, "gtk-zoom-in");
		this.zoomInAction.Sensitive = false;
		this.zoomInAction.ShortLabel = "Increase Icon Size";
		w1.Add (this.zoomInAction, "<Primary><Mod2>KP_Add");
		this.zoomOutAction = new global::Gtk.Action ("zoomOutAction", "Decrease Icon Size", null, "gtk-zoom-out");
		this.zoomOutAction.Sensitive = false;
		this.zoomOutAction.ShortLabel = "Decrease Icon Size";
		w1.Add (this.zoomOutAction, "<Primary><Mod2>KP_Subtract");
		this.zoomNormalAction = new global::Gtk.Action ("zoomNormalAction", "Normal Icon Size", null, "gtk-zoom-100");
		this.zoomNormalAction.Sensitive = false;
		this.zoomNormalAction.ShortLabel = "Normal Icon Size";
		w1.Add (this.zoomNormalAction, "<Primary><Mod2>0");
		this.EditAction = new global::Gtk.Action ("EditAction", "_Edit", null, null);
		this.EditAction.ShortLabel = "_Edit";
		w1.Add (this.EditAction, null);
		this.copyAction = new global::Gtk.Action ("copyAction", "Copy Table", "i.e. for paste into spreadsheet application or RomRaider", "gtk-copy");
		this.copyAction.Sensitive = false;
		this.copyAction.ShortLabel = "Copy Table";
		w1.Add (this.copyAction, "<Alt><Mod2>c");
		this.navigationBarAction = new global::Gtk.ToggleAction ("navigationBarAction", "_Navigation Bar", null, null);
		this.navigationBarAction.Active = true;
		this.navigationBarAction.ShortLabel = "_Navigation Bar";
		w1.Add (this.navigationBarAction, null);
		this.selectAllAction = new global::Gtk.Action ("selectAllAction", "Select _All", null, "gtk-select-all");
		this.selectAllAction.Sensitive = false;
		this.selectAllAction.ShortLabel = "Select _All";
		w1.Add (this.selectAllAction, "<Primary><Mod2>a");
		this.selectNoneAction = new global::Gtk.Action ("selectNoneAction", "Select _None", null, "gtk-clear");
		this.selectNoneAction.Sensitive = false;
		this.selectNoneAction.ShortLabel = "Select _None";
		w1.Add (this.selectNoneAction, "<Primary><Mod2>n");
		this.exportAsXDFAction = new global::Gtk.Action ("exportAsXDFAction", "_TunerPro XDF", null, "gtk-save-as");
		this.exportAsXDFAction.Sensitive = false;
		this.exportAsXDFAction.ShortLabel = "_TunerPro XDF";
		w1.Add (this.exportAsXDFAction, null);
		this.UIManager.InsertActionGroup (w1, 0);
		this.AddAccelGroup (this.UIManager.AccelGroup);
		this.Name = "MainWindow";
		this.Title = "ScoobyRom";
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.vbox1 = new global::Gtk.VBox ();
		this.vbox1.Name = "vbox1";
		this.vbox1.Spacing = 6;
		// Container child vbox1.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><menubar name='menubar1'><menu name='FileAction' action='FileAction'><menuitem name='openAction' action='openAction'/><menuitem name='saveAction' action='saveAction'/><separator/><menu name='exportAsAction' action='exportAsAction'><menuitem name='exportAsRRAction' action='exportAsRRAction'/><menuitem name='exportAsXDFAction' action='exportAsXDFAction'/></menu><separator/><menuitem name='quitAction' action='quitAction'/></menu><menu name='EditAction' action='EditAction'><menuitem name='copyAction' action='copyAction'/><separator/><menuitem name='selectAllAction' action='selectAllAction'/><menuitem name='selectNoneAction' action='selectNoneAction'/></menu><menu name='ViewAction' action='ViewAction'><menuitem name='visualisationAction' action='visualisationAction'/><separator/><menuitem name='iconsAction' action='iconsAction'/><menuitem name='zoomInAction' action='zoomInAction'/><menuitem name='zoomOutAction' action='zoomOutAction'/><menuitem name='zoomNormalAction' action='zoomNormalAction'/><separator/><menuitem name='checksumWindowAction' action='checksumWindowAction'/><menuitem name='propertiesWindowAction' action='propertiesWindowAction'/><separator/><menuitem name='navigationBarAction' action='navigationBarAction'/></menu><menu name='PlotAction' action='PlotAction'><menuitem name='plotExternalAction' action='plotExternalAction'/><menuitem name='createSVGFileAction' action='createSVGFileAction'/></menu><menu name='DataAction' action='DataAction'><menuitem name='exportTableAsCSVAction' action='exportTableAsCSVAction'/></menu><menu name='HelpAction' action='HelpAction'><menuitem name='aboutAction' action='aboutAction'/></menu></menubar></ui>");
		this.menubar1 = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/menubar1")));
		this.menubar1.Name = "menubar1";
		this.vbox1.Add (this.menubar1);
		global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.menubar1]));
		w2.Position = 0;
		w2.Expand = false;
		w2.Fill = false;
		// Container child vbox1.Gtk.Box+BoxChild
		this.navScrolledWindow = new global::Gtk.ScrolledWindow ();
		this.navScrolledWindow.HeightRequest = 40;
		this.navScrolledWindow.Name = "navScrolledWindow";
		this.navScrolledWindow.VscrollbarPolicy = ((global::Gtk.PolicyType)(2));
		// Container child navScrolledWindow.Gtk.Container+ContainerChild
		global::Gtk.Viewport w3 = new global::Gtk.Viewport ();
		w3.ShadowType = ((global::Gtk.ShadowType)(0));
		// Container child GtkViewport2.Gtk.Container+ContainerChild
		this.navbarwidget = new global::GtkWidgets.NavBarWidget ();
		this.navbarwidget.CanFocus = true;
		this.navbarwidget.Name = "navbarwidget";
		this.navbarwidget.FirstPos = 0;
		this.navbarwidget.LastPos = -1;
		this.navbarwidget.CurrentPos = 0;
		w3.Add (this.navbarwidget);
		this.navScrolledWindow.Add (w3);
		this.vbox1.Add (this.navScrolledWindow);
		global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.navScrolledWindow]));
		w6.Position = 1;
		w6.Expand = false;
		// Container child vbox1.Gtk.Box+BoxChild
		this.notebook1 = new global::Gtk.Notebook ();
		this.notebook1.CanFocus = true;
		this.notebook1.Name = "notebook1";
		this.notebook1.CurrentPage = 1;
		// Container child notebook1.Gtk.Notebook+NotebookChild
		this.vpaned2D = new global::Gtk.VPaned ();
		this.vpaned2D.CanFocus = true;
		this.vpaned2D.Name = "vpaned2D";
		this.vpaned2D.Position = 235;
		// Container child vpaned2D.Gtk.Paned+PanedChild
		this.GtkScrolledWindowTV2D = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindowTV2D.Name = "GtkScrolledWindowTV2D";
		this.GtkScrolledWindowTV2D.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindowTV2D.Gtk.Container+ContainerChild
		this.treeview2D = new global::Gtk.TreeView ();
		this.treeview2D.CanFocus = true;
		this.treeview2D.Name = "treeview2D";
		this.GtkScrolledWindowTV2D.Add (this.treeview2D);
		this.vpaned2D.Add (this.GtkScrolledWindowTV2D);
		global::Gtk.Paned.PanedChild w8 = ((global::Gtk.Paned.PanedChild)(this.vpaned2D [this.GtkScrolledWindowTV2D]));
		w8.Resize = false;
		w8.Shrink = false;
		// Container child vpaned2D.Gtk.Paned+PanedChild
		this.hpaned2D = new global::Gtk.HPaned ();
		this.hpaned2D.CanFocus = true;
		this.hpaned2D.Name = "hpaned2D";
		this.hpaned2D.Position = 180;
		// Container child hpaned2D.Gtk.Paned+PanedChild
		this.scrolledwindowTable2D = new global::Gtk.ScrolledWindow ();
		this.scrolledwindowTable2D.CanFocus = true;
		this.scrolledwindowTable2D.Name = "scrolledwindowTable2D";
		this.scrolledwindowTable2D.ShadowType = ((global::Gtk.ShadowType)(1));
		this.hpaned2D.Add (this.scrolledwindowTable2D);
		global::Gtk.Paned.PanedChild w9 = ((global::Gtk.Paned.PanedChild)(this.hpaned2D [this.scrolledwindowTable2D]));
		w9.Resize = false;
		this.vpaned2D.Add (this.hpaned2D);
		global::Gtk.Paned.PanedChild w10 = ((global::Gtk.Paned.PanedChild)(this.vpaned2D [this.hpaned2D]));
		w10.Resize = false;
		w10.Shrink = false;
		this.notebook1.Add (this.vpaned2D);
		// Notebook tab
		this.label1 = new global::Gtk.Label ();
		this.label1.Name = "label1";
		this.label1.LabelProp = "2D Tables";
		this.notebook1.SetTabLabel (this.vpaned2D, this.label1);
		this.label1.ShowAll ();
		// Container child notebook1.Gtk.Notebook+NotebookChild
		this.vpaned3D = new global::Gtk.VPaned ();
		this.vpaned3D.CanFocus = true;
		this.vpaned3D.Name = "vpaned3D";
		this.vpaned3D.Position = 213;
		// Container child vpaned3D.Gtk.Paned+PanedChild
		this.ScrolledWindowTV3D = new global::Gtk.ScrolledWindow ();
		this.ScrolledWindowTV3D.Name = "ScrolledWindowTV3D";
		this.ScrolledWindowTV3D.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child ScrolledWindowTV3D.Gtk.Container+ContainerChild
		this.treeview3D = new global::Gtk.TreeView ();
		this.treeview3D.CanFocus = true;
		this.treeview3D.Name = "treeview3D";
		this.ScrolledWindowTV3D.Add (this.treeview3D);
		this.vpaned3D.Add (this.ScrolledWindowTV3D);
		global::Gtk.Paned.PanedChild w13 = ((global::Gtk.Paned.PanedChild)(this.vpaned3D [this.ScrolledWindowTV3D]));
		w13.Resize = false;
		w13.Shrink = false;
		// Container child vpaned3D.Gtk.Paned+PanedChild
		this.scrolledwindowTable3D = new global::Gtk.ScrolledWindow ();
		this.scrolledwindowTable3D.CanFocus = true;
		this.scrolledwindowTable3D.Name = "scrolledwindowTable3D";
		this.scrolledwindowTable3D.ShadowType = ((global::Gtk.ShadowType)(1));
		this.vpaned3D.Add (this.scrolledwindowTable3D);
		global::Gtk.Paned.PanedChild w14 = ((global::Gtk.Paned.PanedChild)(this.vpaned3D [this.scrolledwindowTable3D]));
		w14.Resize = false;
		w14.Shrink = false;
		this.notebook1.Add (this.vpaned3D);
		global::Gtk.Notebook.NotebookChild w15 = ((global::Gtk.Notebook.NotebookChild)(this.notebook1 [this.vpaned3D]));
		w15.Position = 1;
		// Notebook tab
		this.label2 = new global::Gtk.Label ();
		this.label2.Name = "label2";
		this.label2.LabelProp = "3D Tables";
		this.notebook1.SetTabLabel (this.vpaned3D, this.label2);
		this.label2.ShowAll ();
		this.vbox1.Add (this.notebook1);
		global::Gtk.Box.BoxChild w16 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.notebook1]));
		w16.Position = 2;
		// Container child vbox1.Gtk.Box+BoxChild
		this.statusbar1 = new global::Gtk.Statusbar ();
		this.statusbar1.Name = "statusbar1";
		this.statusbar1.Spacing = 6;
		// Container child statusbar1.Gtk.Box+BoxChild
		this.progressbar1 = new global::Gtk.ProgressBar ();
		this.progressbar1.Name = "progressbar1";
		this.statusbar1.Add (this.progressbar1);
		global::Gtk.Box.BoxChild w17 = ((global::Gtk.Box.BoxChild)(this.statusbar1 [this.progressbar1]));
		w17.Position = 2;
		this.vbox1.Add (this.statusbar1);
		global::Gtk.Box.BoxChild w18 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.statusbar1]));
		w18.PackType = ((global::Gtk.PackType)(1));
		w18.Position = 3;
		w18.Expand = false;
		w18.Fill = false;
		this.Add (this.vbox1);
		if ((this.Child != null)) {
			this.Child.ShowAll ();
		}
		this.DefaultWidth = 938;
		this.DefaultHeight = 702;
		this.Show ();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
		this.openAction.Activated += new global::System.EventHandler (this.OnOpenActionActivated);
		this.quitAction.Activated += new global::System.EventHandler (this.OnQuitActionActivated);
		this.aboutAction.Activated += new global::System.EventHandler (this.OnAbout);
		this.saveAction.Activated += new global::System.EventHandler (this.OnSaveActionActivated);
		this.iconsAction.Activated += new global::System.EventHandler (this.OnIconsActionActivated);
		this.exportAsRRAction.Activated += new global::System.EventHandler (this.OnExportAsRRActionActivated);
		this.plotExternalAction.Activated += new global::System.EventHandler (this.OnPlotActionActivated);
		this.checksumWindowAction.Activated += new global::System.EventHandler (this.OnROMChecksumsActionActivated);
		this.propertiesWindowAction.Activated += new global::System.EventHandler (this.OnPropertiesWindowActionActivated);
		this.createSVGFileAction.Activated += new global::System.EventHandler (this.OnCreateSVGFileActionActivated);
		this.visualisationAction.Activated += new global::System.EventHandler (this.OnVisualizationAction);
		this.exportTableAsCSVAction.Activated += new global::System.EventHandler (this.OnExportTableAsCSVActionActivated);
		this.zoomInAction.Activated += new global::System.EventHandler (this.OnIncreaseIconSizeActionActivated);
		this.zoomOutAction.Activated += new global::System.EventHandler (this.OnDecreaseIconSizeActionActivated);
		this.zoomNormalAction.Activated += new global::System.EventHandler (this.OnZoomNormalActionActivated);
		this.copyAction.Activated += new global::System.EventHandler (this.OnCopyTableAction);
		this.navigationBarAction.Activated += new global::System.EventHandler (this.OnNavigationBarActionActivated);
		this.selectAllAction.Activated += new global::System.EventHandler (this.OnSelectAllActionActivated);
		this.selectNoneAction.Activated += new global::System.EventHandler (this.OnSelectNoneActionActivated);
		this.exportAsXDFAction.Activated += new global::System.EventHandler (this.OnExportAsXDFActionActivated);
		this.notebook1.SwitchPage += new global::Gtk.SwitchPageHandler (this.OnNotebook1SwitchPage);
	}
}
